#!/usr/bin/env ruby

# (If you use this, don't forget to add pry to your Gemfile!)
# require "pry"
# Pry.start

require "irb"
require "irb/completion"

require "bundler/setup"

require 'optparse'
require 'optparse/time'
require 'ostruct'

options = OpenStruct.new

OptionParser.new do |opts|

  # Defaults
  options.before = Time.now
  options.after = options.before - 28
  options.count = 20

  opts.banner = "Usage: #{File.basename($0,'.*')} [--after DATE] [--before DATE] [--top COUNT]"

  # Cast 'after' argument to a Time object.
  opts.on("--after [AFTER]", Time, "Start search") do |after|
    options.after = after
    earliest = Time.new(2011,2,12)
    if options.after < earliest
      abort "The after time of (#{options.after}) is before the earliest offered at #{earliest}"
    end

  end

  # Cast 'before' argument to a Time object.
  opts.on("--before [BEFORE]", Time, "End search") do |before|
    options.before = before
    # before must occur after after
  end

  # Cast 'top' argument to a Integer object.
  opts.on("--top [COUNT]", Integer, "The number of repos to show") do |count|
    options.count = count
  end

  # No argument, shows at tail.  This will print an options summary.
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

end.parse!

require 'rdd'

Rdd.search_archive_over_time(after: options.after, before: options.before, top: options.count)

